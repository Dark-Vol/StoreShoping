project-root/
├── client/               # Клиентская часть (Frontend)
│   ├── public/           # Статические файлы (например, изображения, шрифты)
│   ├── src/              # Исходный код клиентской части
│   │   ├── assets/       # Дополнительные ресурсы (шрифты, изображения)
│   │   │   └── styles/   # SCSS стили
│   │   │       ├── base/         # Базовые стили (reset, global.scss)
│   │   │       ├── components/   # Стили для компонентов
│   │   │       ├── layouts/      # Стили для макетов страниц
│   │   │       └── variables.scss # Переменные SCSS
│   │   ├── components/   # Компоненты пользовательского интерфейса
│   │   ├── pages/        # Страницы (Home, Product, Checkout, etc.)
│   │   ├── hooks/        # Пользовательские хуки (например, useFetch)
│   │   ├── services/     # Логика для взаимодействия с API
│   │   ├── utils/        # Вспомогательные функции (например, форматирование данных)
│   │   ├── App.tsx       # Главный компонент приложения
│   │   ├── index.tsx     # Точка входа (рендеринг приложения)
│   ├── tsconfig.json     # Конфигурация TypeScript
│   ├── package.json      # Зависимости и скрипты для frontend
│   ├── .env              # Переменные окружения для клиента
│   ├── .eslintrc.json    # Конфигурация ESLint для TypeScript и React
│   ├── .prettierrc       # Конфигурация Prettier для форматирования кода
│   ├── README.md         # Описание клиентской части проекта
│   └── .gitignore        # Игнорирование файлов в git
│
├── server/               # Серверная часть (Backend)
│   ├── controllers/      # Логика работы с запросами (ProductController, UserController)
│   ├── models/           # Модели базы данных (Product, User, Order)
│   ├── routes/           # API роуты (productRoutes, userRoutes)
│   ├── middlewares/      # Промежуточное ПО (например, аутентификация)
│   ├── services/         # Бизнес-логика (ProductService, OrderService)
│   ├── config/           # Настройки (например, подключение к базе данных)
│   ├── utils/            # Вспомогательные функции
│   ├── app.js            # Настройка и запуск сервера
│   ├── package.json      # Зависимости для backend
│   ├── .env              # Переменные окружения для сервера
│   ├── database/         # Миграции базы данных и схемы
│   └── README.md         # Описание серверной части проекта
│
├── .gitignore            # Файлы и папки, которые игнорируются git
├── docker-compose.yml    # Конфигурация для Docker (например, для базы данных и сервера)
├── README.md             # Описание всего проекта
└── package.json          # Общие зависимости (если клиент и сервер используют одни и те же библиотеки)